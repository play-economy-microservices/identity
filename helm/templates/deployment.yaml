apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{.Values.microserviceName}}-deployment"
spec:
  selector:
    matchLabels:
      app: {{.Values.microserviceName}}
  template:
    metadata:
      labels:
        app: {{.Values.microserviceName}}
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: "{{.Values.microserviceName}}-serviceaccount"
      containers:
        - name: {{.Values.microserviceName}}
          image: "{{.Values.image.repository}}:{{.Values.image.tag}}"
          securityContext:
            runAsUser: 0
            privileged: true
          env:
            - name: ASPNETCORE_URLS
              value: "http://+:5002"
            - name: ServiceSettings__MessageBroker
              value: SERVICEBUS
            - name: ServiceSettings__KeyVaultName
              value: economykeyvault
            - name: IdentitySettings__PathBase
              value: /identity/svc
            - name: IdentitySettings__CertificateCerFilePath
              value: "/certificates/certificate.crt"
            - name: IdentitySettings__CertificateKeyFilePath
              value: "/certificates/certificate.key"
            - name: IdentityServerSettings__Clients__0__RedirectUris__0
              value: https://playeconomy-gateway.westus2.cloudapp.azure.com/authentication/login-callback
            - name: IdentityServerSettings__Clients__0__PostLogoutRedirectUris__0
              value: https://playeconomy-gateway.westus2.cloudapp.azure.com/authentication/logout-callback
          resources:
            limits:
              memory: "128Mi"
              cpu: "150m"
          ports:
            - containerPort: 5002
          livenessProbe:
            httpGet:
              path: /health/live
              port: 5002
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 5002
            initialDelaySeconds: 10
          volumeMounts:
            - name: certificate-volume
              mountPath: /certificates
      volumes:
        - name: certificate-volume
          secret:
            secretName: signing-cert
            items:
              - key: tls.key
                path: certificate.key
              - key: tls.crt
                path: certificate.crt
